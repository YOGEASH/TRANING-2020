yogeash.krishnaswamy@accenture.com

1)Find the names of all students who are friends with someone named Gabriel. (1 point possible)

select name from highschooler h inner join friend f on h.id=f.id1 where f.id2 IN(1689,1911);

Jordan
Alexis
Cassandra
Andrew
Jessica

2)For every student who likes someone 2 or more grades younger than themselves, return that student's name and grade, and the name and grade of the student they like. (1 point possible)

select h1.name,h1.grade,h2.name,h2.grade from highschooler h1 inner join likes l on h1.id=l.id1 inner join highschooler h2 on h2.id=l.id2 where (h1.grade-h2.grade)>=2;

John|12|Haley|10

3)For every pair of students who both like each other, return the name and grade of both students. Include each pair only once, with the two names in alphabetical order. (1 point possible)

select h1.name,h1.grade,h2.name,h2.grade from highschooler h1 inner join likes l on h1.id=l.id1 inner join highschooler h2 on h2.id=l.id2 where l.id1 in (select l1.id1 from likes l1 inner join  likes l2  on l1.id1=l2.id2 where l2.id1=l1.id2 or l1.id1=l2.id2) order by h1.name,h2.name;

Alexis|11|Kris|10
Cassandra|9|Gabriel|9
Gabriel|9|Cassandra|9

4)Find all students who do not appear in the Likes table (as a student who likes or is liked) and return their names and grades. Sort by grade, then by name within each grade. (1 point possible)

select name,grade from highschooler where id not in (select id1 from likes) and id not in (select id2 from likes) order by grade,name;

Jordan|9
Tiffany|9
Logan|12

5)For every situation where student A likes student B, but we have no information about whom B likes (that is, B does not appear as an ID1 in the Likes table), return A and B's names and grades. (1 point possible)

select h1.name,h1.grade,h2.name,h2.grade from likes l  inner join highschooler h1  on h1.id=l.id1 inner join highschooler h2 on h2.id=l.id2 where l.id2 not in(select l2.id1 from likes l2);

Alexis|11|Kris|10
Brittany|10|Kris|10
Austin|11|Jordan|12
John|12|Haley|10

6)Find names and grades of students who only have friends in the same grade. Return the result sorted by grade, then by name within each grade. (1 point possible)

select h1.name,h1.grade,h2.name,h2.grade from friend l  inner join highschooler h1  on h1.id=l.id1 inner join highschooler h2 on h2.id=l.id2 where h1.grade=h2.grade;

Jordan|9|Tiffany|9
Jordan|9|Gabriel|9
Gabriel|9|Cassandra|9
Kris|10|Haley|10
Kris|10|Brittany|10
Haley|10|Brittany|10
Alexis|11|Gabriel|11
Alexis|11|Jessica|11
Gabriel|11|Jessica|11
Kyle|12|Jordan|12
Jordan|12|Logan|12
Logan|12|John|12
Tiffany|9|Jordan|9
Gabriel|9|Jordan|9
Cassandra|9|Gabriel|9
Kris|10|Andrew|10
Haley|10|Kris|10
Brittany|10|Kris|10
Brittany|10|Haley|10
Gabriel|11|Alexis|11
Jessica|11|Alexis|11
Jessica|11|Gabriel|11
Jordan|12|Kyle|12
Logan|12|Jordan|12
John|12|Logan|12

7)For each student A who likes a student B where the two are not friends, find if they have a friend C in common (who can introduce them!). For all such trios, return the name and grade of A, B, and C. (1 point possible)

8)Find the difference between the number of students in the school and the number of different first names. (1 point possible)

select count(*)-(select count( distinct name ) from highschooler) from highschooler;

2

9)Find the name and grade of all students who are liked by more than one other student. (1 point possible)



10)For every situation where student A likes student B, but student B likes a different student C, return the names and grades of A, B, and C. (1 point possible)

11)Find those students for whom all of their friends are in different grades from themselves. Return the students' names and grades.(1 point possible)

12)What is the average number of friends per student? (Your result should be just one number.) (1 point possible)

13)Find the number of students who are either friends with Cassandra or are friends of friends of Cassandra. Do not count Cassandra, even though technically she is a friend of a friend.

14)Find the name and grade of the student(s) with the greatest number of friends. (1 point possible)
